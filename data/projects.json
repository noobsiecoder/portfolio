{
  "projects": [
    {
      "title": "IoT enabled six degrees-of-freedom robotic arm",
      "description": [
        "A six degrees-of-freedom robotic arm utilizing IoT protocol conforming to industry standard"
      ],
      "technologies": [
        "C++",
        "JavaScript",
        "SolidWorks",
        "REST API",
        "ESP-IDF"
      ],
      "challenges": [
        "Torque displacement calculation to balance robot arm during operation"
      ],
      "achievements": [
        "Implemented inverse kinematics using DH algorithm by referring from a research paper",
        "Resolved torque displacement by calculating torque and adding a heuristic value for each links to operate each servo motors",
        "Developed an intuitive user interface to maximize user workflow and ensure seamless interruption",
        "Published a research paper at the IEEE international conference in July, 2023"
      ],
      "image": {
        "src": "/images/robot_arm.jpg",
        "alt": "Robotic arm",
        "caption": "An assembled 6DOF Robot arm"
      },
      "links": [
        {
          "name": "IEEE Research Paper",
          "link": "https://ieeexplore.ieee.org/document/10263943"
        },
        {
          "name": "GitHub",
          "link": "https://github.com/noobsiecoder/6dof-robotic-arm"
        }
      ]
    },
    {
      "title": "Edge detection from scratch: Canny and Sobel Filter",
      "description": [
        "An implementation of Sobel operator and Canny edge detection",
        "Compared each with the OpenCV's built-in function"
      ],
      "technologies": ["Python", "NumPy", "Matplotlib"],
      "challenges": ["Memory usage optimization and computational time"],
      "achievements": [
        "Achieved an <b>optimized memory usage of 1.5-2%</b> in Canny Edge detection compared to OpenCV's built-in function",
        "Authored a Medium article discussing the implementation"
      ],
      "image": {
        "src": "/images/canny.png",
        "alt": "Edge detection result",
        "caption": "Edge detected by Canny edge detection algorithm "
      },
      "links": [
        {
          "name": "GitHub",
          "link": "https://github.com/noobsiecoder/edge-detection-filters"
        },
        {
          "name": "Medium (Canny)",
          "link": "https://medium.com/@abhisheksriram845/canny-edge-detection-explained-and-compared-with-opencv-in-python-57a161b4bd19"
        },
        {
          "name": "Medium (Sobel)",
          "link": "https://medium.com/@abhisheksriram845/seeing-the-world-in-edges-an-insiders-look-at-sobel-detection-fc118e3c5ea8"
        }
      ]
    },
    {
      "title": "RTAB-SLAM Comparison in TurtleBot3",
      "description": [
        "Implemented RTAB-SLAM algorithm on TurtleBot 3 with a 2D LiDAR and a stereo camera using ROS",
        "Compared the result to a map generated by RTAB-Map App on iPhone 14 Pro."
      ],
      "technologies": ["ROS", "Python", "TurtleBot3", "SLAM", "Raspberry Pi4"],
      "challenges": ["ROS installation in Raspberry Pi4"],
      "achievements": [
        "Successfully implemented RTAB-SLAM in TurtleBot and mapped an indoor environment with an <b>accuracy rate 97%</b>",
        "Validated data from the map generated by the RTAB-Map on iPhone with a <b>96% accuracy rate</b>"
      ],
      "image": {
        "src": "/images/rtab_map.png",
        "alt": "RTAB-SLAM",
        "caption": "Map generated by 2D LiDAR using RTAB-SLAM"
      },
      "links": [
        {
          "name": "GitLab",
          "link": "https://gitlab.com/sriram.ab/eece5554/-/tree/main/Final_Project"
        },
        {
          "name": "Google Drive",
          "link": "https://drive.google.com/drive/folders/1QsPZIXSehe2NlebCP28l2X1QP3j0lz96"
        }
      ]
    }
  ]
}
